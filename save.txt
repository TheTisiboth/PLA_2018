


Crazy0(Init){
  * (Init): True ? Kamikaze :(Init)
  * (Unreachable): MyDir(d) ? Move(d) :(Unreachable)
  * (Useless): MyDir(_) ? Move :(Useless)
  * (Dummy): Cell(F,e) ? Hit(e,F) :(Dummy)
}



Player0(Init){
  * (Init):
  | Key(FU) ? Move(N) :(Init)
  | Key(FD) ? Move(S) :(Init)
  | Key(FL) ? Move(O) :(Init)
  | Key(FR) ? Move(E) :(Init)
  | Key(SPACE) ? Hit  :(Init)
  | Key(ENTER) ? Jump :(Init)
  | Key(b)  ? Jump(B) :(Init)
  | Key(f)  ? Turn(B) :(Init)
  | Key(p)  ? Pop     :(Init)
  | Key(w)  ? Wizz    :(Init)
  | Key(g)  ? Get     :(Init)
  | Key(t)  ? Throw   :(Init)
  | True    ? Power   :(Init)
}



Philosopher0(Think){
  * (Think)
}



Blocker0(Init){
  * (Init): !True ? Power :(Init)
}



Mover0(Init){
  * (Init): True ? Move :(Init)
}



Popper0(Init){
  * (Init): True ? Pop :(Init)
}



Wizzer0(Init){
  * (Init): True ? Wizz :(Init)
}



Turner0(Turn_0){
  * (Turn_0): True ? Turn(R) :(Turn_1)
  * (Turn_1): True ? Turn(R) :(Turn_2)
  * (Turn_2): True ? Turn(R) :(Turn_3)
  * (Turn_3): True ? Turn(R) :(Turn_4)
  * (Turn_4): True ? Kamikaze :()
  * ()
}



IA3 (DEPL){
*(DEPL) :
  |!GotPower ? Pop : (RECHERCHER_PEINTURE)
  |Cell(F,G) ? Hit : (DEPL)
  |Cell(F, V) / Cell(F, P) / Cell(F, J) / Cell(F, M) ? Move(F) : (DEPL2)
  |Cell(L, V) / Cell(L, P) / Cell(L, J) / Cell(L, M) ? Move(L) : (DEPL3)
  |Cell(R, V) / Cell(R, P) / Cell(R, J) / Cell(R, M) ? Move(R) : (DEPL4)
  |Cell(L,G) ? Turn() : (DEPL)
  |Cell(R,G) ? Turn() : (DEPL)
*(DEPL2) :
  |!GotPower ? Pop() : (RECHERCHER_PEINTURE)
  |Cell(F,G) ? Hit : (DEPL2)
  |Cell(F, V) / Cell(F, P) / Cell(F, J) / Cell(F, M) ? Move(F) : (DEPL3)
  |Cell(R, V) / Cell(R, P) / Cell(R, J) / Cell(R, M) ? Move(R) : (DEPL4)
  |Cell(L, V) / Cell(L, P) / Cell(L, J) / Cell(L, M) ? Move(L) : (DEPL)
  |Cell(L,G) ? Turn() : (DEPL)
  |Cell(R,G) ? Turn() : (DEPL)
*(DEPL3) :
  |!GotPower ? Pop() : (RECHERCHER_PEINTURE)
  |Cell(F,G) ? Hit : (DEPL3)
  |Cell(L, V) / Cell(L, P) / Cell(L, J) / Cell(L, M) ? Move(L) : (DEPL4)
  |Cell(F, V) / Cell(F, P) / Cell(F, J) / Cell(F, M) ? Move(F) : (DEPL)
  |Cell(R, V) / Cell(R, P) / Cell(R, J) / Cell(R, M) ? Move(R) : (DEPL2)
  |Cell(L,G) ? Turn() : (DEPL)
  |Cell(R,G) ? Turn() : (DEPL)
*(DEPL4) :
  |!GotPower ? Pop() : (RECHERCHER_PEINTURE)
  |Cell(F,G) ? Hit : (DEPL4)
  |Cell(R, V) / Cell(R, P) / Cell(R, J) / Cell(R, M) ? Move(R) : (DEPL)
  |Cell(L, V) / Cell(L, P) / Cell(L, J) / Cell(L, M) ? Move(L) : (DEPL2)
  |Cell(F, V) / Cell(F, P) / Cell(F, J) / Cell(F, M) ? Move(F) : (DEPL3)
  |Cell(L,G) ? Turn() : (DEPL)
  |Cell(R,G) ? Turn() : (DEPL)

*(RECHERCHE_SBIRE) :
	|Closest(P, L) & !(GotStuff()) ? Move(L) : (RECHERCHE_SBIRE)
	|Closest(P, R) & !(GotStuff()) ? Move(R) : (RECHERCHE_SBIRE)
	|Closest(P, F) & !(GotStuff()) ? Move(F) : (RECHERCHE_SBIRE)
	|Closest(P, B) & !(GotStuff()) ? Move(B) : (RECHERCHE_SBIRE)
	|GotStuff() ? Pop() : (LANCER_SBIRE)

*(LANCER_SBIRE) :
	|Cell(F,V) ? Throw(F) : (DEPL)
	|!(Cell(F,V)) ? Move(R) / Move(L) : (LANCER_SBIRE)


*(RECHERCHER_PEINTURE) :
	|Cell(F,G) & !(GotPower()) ? Hit : (RECHERCHER_PEINTURE)
	|Closest(L,J) & !(GotPower()) ? Move(L) : (RECHERCHER_PEINTURE)
	|Closest(R,J) & !(GotPower()) ? Move(R) : (RECHERCHER_PEINTURE)
	|Closest(F,J) & !(GotPower()) ? Move(F) : (RECHERCHER_PEINTURE)
	|Closest(B,J) & !(GotPower()) ? Move(B) : (RECHERCHER_PEINTURE)
	|GotPower() ? Pop() : (DEPL)
}

